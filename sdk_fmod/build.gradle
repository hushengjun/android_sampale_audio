apply plugin: rootProject.ext.plugins.library

static def buildTime() {
    return new Date().format("yyMMddHH", TimeZone.getTimeZone("GMT+08:00"))
}

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android.versionCode
        versionName rootProject.ext.android.versionName

        ndk { abiFilters "armeabi-v7a" ,"arm64-v8a"}
        testInstrumentationRunner rootProject.ext.dependencies.testInstrumentationRunner
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    android.libraryVariants.all { variant ->
        variant.outputs.all {
            outputFileName = "sdk_fmod_v${buildTime()}_${variant.buildType.name}.aar"
        }
    }

    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    lintOptions {
        abortOnError false
        checkReleaseBuilds false
        warning 'InvalidPackage'
        disable 'GoogleAppIndexingWarning'
    }

    dexOptions {
        javaMaxHeapSize "4g"
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    testImplementation rootProject.ext.dependencies.testJunit
    androidTestImplementation rootProject.ext.dependencies.testExt
    androidTestImplementation rootProject.ext.dependencies.testEspresso

    implementation rootProject.ext.dependencies.appcompat

}